# Файл docker-compose.yml

# Перечень volume
volumes:
  # volume — для БД
  pg_data:
  # Новый volume — для статических файлов
  static:

# Перечень контейнеров
services:
  # Имя и описание первого контейнера; имя выбирает разработчик. 
  # Это контейнер БД
  db:
    # Из какого образа запустить контейнер:
    image: postgres:13.10
    # Файл (или список файлов) с переменными окружения
    env_file: .env
    # Какой volume подключить для этого контейнера
    volumes:
      - pg_data:/var/lib/postgresql/data
  # Имя и описание контейнера с бэкендом
  backend:
    # Из какого Dockerfile собирать образ для этого контейнера:
    build: ./backend/
    env_file: .env
    # Тут подключаем volume static к backend
    volumes:
      - static:/backend_static
  # Имя третьего контейнера. Это контейнер с фронтендом
  frontend:
    env_file: .env
    build: ./frontend/
    # command - это аналог команды CMD в Dockerfile для выполенения при запуске контейнера 
    # (делается ток 1 раз!) 
    # (Команда, указанная под ключом command, переопределяет инструкцию CMD в докерфайле, заменяет её.)
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static

    # Добавляем новый контейнер: gateway (это название контейнера - gateway).
  gateway:
    # Сбилдить и запустить образ, 
    # описанный в Dockerfile в папке gateway
    build: ./gateway/
    # Тут подключаем volume static со статикой к gateway
    volumes:
      - static:/backend_static
    # Ключ ports устанавливает
    # перенаправление всех запросов с порта 8000 хоста
    # на порт 80 контейнера. 
    # (Для других контейнеров не надо, так как они общаются по именам в сети Docker)
    ports:
      - 8000:80 